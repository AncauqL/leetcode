// 1.一个一个对
class Solution {
public:
    bool isPowerOfTwo(int n) {
        int flag=0;
        for(int i=0;i<32;i++){
            if(n==pow(2,i))
                flag++;
        }
        return flag;
    }
};
// 2.位运算
// 如果一个正整数是2的n次幂,那么这个数转化为二进制一定是最左边1,其它均为0的形式.
// 例如,2->10,4->100,8->1000.(右边是低位,左边是高位)
// 减一后,则去掉最左低位的1,其它位均为1.
// 由此,检验去掉最低位的1后,原数是否为0,即可判断是否为2的幂.
// 如何检验?
// - n & (n-1)
// - n & -n